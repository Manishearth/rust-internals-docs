initSidebarItems({"fn":[["enter_decoding_context","Execute f after pushing the given DecodingContext onto the TLS stack."],["enter_encoding_context","Execute f after pushing the given EncodingContext onto the TLS stack."],["unsafe_with_decoding_context","Execute f with access to the thread-local decoding context and rbml decoder."],["unsafe_with_encoding_context","Execute f with access to the thread-local encoding context and rbml encoder."],["with_decoding_context","Execute f with access to the thread-local decoding context and rbml decoder. This function will panic if the decoder passed in and the context decoder are not the same.Note that this method is 'practically' safe due to its checking that the decoder passed in is the same as the one in TLS, but it would still be possible to construct cases where the DecodingContext is exchanged while the same decoder is used, thus working with a wrong context."],["with_encoding_context","Execute f with access to the thread-local encoding context and rbml encoder. This function will panic if the encoder passed in and the context encoder are not the same.Note that this method is 'practically' safe due to its checking that the encoder passed in is the same as the one in TLS, but it would still be possible to construct cases where the EncodingContext is exchanged while the same encoder is used, thus working with a wrong context."]],"trait":[["DecodingContext",""],["EncodingContext",""]]});