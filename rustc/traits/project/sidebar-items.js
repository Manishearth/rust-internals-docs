initSidebarItems({"enum":[["ProjectionMode","Depending on the stage of compilation, we want projection to be more or less conservative."]],"fn":[["normalize","Normalizes any associated type projections in `value`, replacing them with a fully resolved type where possible. The return value combines the normalized result and any additional obligations that were incurred as result."],["normalize_projection_type","The guts of `normalize`: normalize a specific projection like `<T as Trait>::Item`. The result is always a type (and possibly additional obligations). If ambiguity arises, which implies that there are unresolved type variables in the projection, we will substitute a fresh type variable `$X` and generate a new obligation `<T as Trait>::Item == $X` for later."]],"struct":[["MismatchedProjectionTypes",""],["Normalized",""]]});