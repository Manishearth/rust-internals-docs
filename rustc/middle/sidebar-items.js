initSidebarItems({"mod":[["allocator",""],["const_val",""],["cstore","the rustc crate store interface. This also includes types that are mostly used as a part of that interface, but these should probably get a better home if someone can find one."],["dataflow","A module for propagating forward dataflow information. The analysis assumes that the items to be propagated can be represented as bits and thus uses bitvectors. Your job is simply to specify the so-called GEN and KILL bits for each expression."],["dead",""],["dependency_format","Resolution of mixing rlibs and dylibs"],["effect","Enforces the Rust effect system. Currently there is just one effect, `unsafe`."],["entry",""],["expr_use_visitor","A different sort of visitor for walking fn bodies.  Unlike the normal visitor, which just walks the entire body in one shot, the `ExprUseVisitor` determines how expressions are being used."],["free_region","This file handles the relationships between free regions -- meaning lifetime parameters. Ordinarily, free regions are unrelated to one another, but they can be related via implied or explicit bounds.  In that case, we track the bounds using the `TransitiveRelation` type and use that to decide when one free region outlives another and so forth."],["intrinsicck",""],["lang_items",""],["liveness","A classic liveness analysis based on dataflow over the AST.  Computes, for each local variable in a function, whether that variable is live at a given point.  Program execution points are identified by their id."],["mem_categorization","Categorization"],["privacy","A pass that checks to make sure private fields and methods aren't used outside their scopes. This pass will also generate a set of exported items which are available for use externally when compiled as a library."],["reachable",""],["recursion_limit",""],["region","This file actually contains two passes related to regions.  The first pass builds up the `scope_map`, which describes the parent links in the region hierarchy.  The second pass infers which types must be region parameterized."],["resolve_lifetime","Name resolution for lifetimes."],["stability","A pass that annotates every item and method with its stability level, propagating default levels lexically from parent to children ast nodes."],["weak_lang_items","Validity checking for weak lang items"]]});