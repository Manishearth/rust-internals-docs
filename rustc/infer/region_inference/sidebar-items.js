initSidebarItems({"enum":[["CombineMapType",""],["Constraint",""],["GenericKind",""],["ProcessedErrorOrigin",""],["RegionResolutionError",""],["UndoLogEntry",""],["VarValue",""],["VerifyBound",""]],"struct":[["RegionSnapshot",""],["RegionVarBindings",""],["SameRegions","SameRegions is used to group regions that we think are the same and would like to indicate so to the user. For example, the following function ``` struct Foo { bar: i32 } fn foo2<'a, 'b>(x: &'a Foo) -> &'b i32 {    &x.bar } ``` would report an error because we expect 'a and 'b to match, and so we group 'a and 'b together inside a SameRegions struct"],["TaintDirections","When working with skolemized regions, we often wish to find all of the regions that are either reachable from a skolemized region, or which can reach a skolemized region, or both. We call such regions *tained* regions.  This struct allows you to decide what set of tainted regions you want."],["TwoRegions",""],["Verify",""]],"type":[["CombineMap",""]]});