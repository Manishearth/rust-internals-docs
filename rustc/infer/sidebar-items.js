initSidebarItems({"enum":[["FixupError",""],["LateBoundRegionConversionTime","Times when we replace late-bound regions with variables:"],["ParameterOrigin","Places that type/region parameters can appear."],["RegionVariableOrigin","Reasons to create a region inference variable"],["SubregionOrigin","The origin of a `r1 <= r2` constraint."],["TypeOrigin","Why did we require that the two types be related?"],["ValuePairs","See `error_reporting.rs` for more details"]],"fn":[["can_mk_eqty",""],["can_mk_subty",""],["drain_fulfillment_cx","Finishes processes any obligations that remain in the fulfillment context, and then \"freshens\" and returns `result`. This is primarily used during normalization and other cases where processing the obligations in `fulfill_cx` may cause type inference variables that appear in `result` to be unified, and hence we need to process those obligations to get the complete picture of the type."],["drain_fulfillment_cx_or_panic",""],["fixup_err_to_string",""],["mk_eq_impl_headers",""],["mk_eq_trait_refs",""],["mk_eqty",""],["mk_sub_poly_trait_refs",""],["mk_subr",""],["mk_subty",""],["new_infer_ctxt",""],["normalize_associated_type",""],["normalizing_infer_ctxt",""]],"mod":[["bivariate","Applies the \"bivariance relationship\" to two types and/or regions. If (A,B) are bivariant then either A <: B or B <: A. It occurs when type/lifetime parameters are unconstrained. Usually this is an error, but we permit it in the specific case where a type parameter is constrained in a where-clause via an associated type."],["combine",""],["equate",""],["error_reporting","Error Reporting Code for the inference engine"],["glb",""],["lattice","Lattice Variables"],["lub",""],["region_inference","See README.md"],["resolve",""],["sub",""],["type_variable",""],["unify_key",""]],"struct":[["CombinedSnapshot",""],["InferCtxt",""],["TypeFreshener",""],["TypeTrace","The trace designates the path through inference that we took to encounter an error or subtyping constraint."]],"type":[["Bound",""],["FixupResult",""],["SkolemizationMap","A map returned by `skolemize_late_bound_regions()` indicating the skolemized region that each late-bound region was replaced with."],["UnitResult",""]]});