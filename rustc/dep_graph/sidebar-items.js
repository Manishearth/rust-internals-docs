initSidebarItems({"enum":[["DepNode",""]],"fn":[["visit_all_items_in_krate","Visit all the items in the krate in some order. When visiting a particular item, first create a dep-node by calling `dep_node_fn` and push that onto the dep-graph stack of tasks, and also create a read edge from the corresponding AST node. This is used in compiler passes to automatically record the item that they are working on."]],"mod":[["debug","Code for debugging the dep-graph."]],"struct":[["DepGraph",""],["DepGraphQuery",""],["DepTask",""],["DepTrackingMap","A DepTrackingMap offers a subset of the `Map` API and ensures that we make calls to `read` and `write` as appropriate. We key the maps with a unique type for brevity."],["WorkProduct","A \"work product\" is an intermediate result that we save into the incremental directory for later re-use. The primary example are the object files that we save for each partition at code generation time."],["WorkProductId","A \"work product\" corresponds to a `.o` (or other) file that we save in between runs. These ids do not have a DefId but rather some independent path or string that persists between runs without the need to be mapped or unmapped. (This ensures we can serialize them even in the absence of a tcx.)"]],"trait":[["DepTrackingMapConfig",""]]});