initSidebarItems({"enum":[["Level","Setting for how to handle a lint."],["LintSource","How a lint level was set."]],"fn":[["check_ast_crate",""],["check_crate","Perform lint checking on a crate."],["provide",""],["struct_lint_level",""]],"mod":[["builtin","Some lints that are built in to the compiler."]],"struct":[["BufferedEarlyLint","Lints that are buffered up early on in the `Session` before the `LintLevels` is calculated"],["EarlyContext","Context for lint checking of the AST, after expansion, before lowering to HIR."],["FutureIncompatibleInfo","Extra information for a future incompatibility lint. See the call to `register_future_incompatible` in `librustc_lint/lib.rs` for guidelines."],["LateContext","Context for lint checking after type checking."],["Lint","Specification of a single lint."],["LintBuffer",""],["LintId","Identifies a lint known to the compiler."],["LintLevelMap",""],["LintLevelSets",""],["LintStore","Information about the registered lints."]],"trait":[["EarlyLintPass",""],["LateLintPass","Trait for types providing lint checks."],["LintContext",""],["LintPass",""]],"type":[["EarlyLintPassObject","A lint pass boxed up as a trait object."],["LateLintPassObject",""],["LevelSource",""],["LintArray",""]]});