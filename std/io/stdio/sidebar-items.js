initSidebarItems({"fn":[["stderr","Constructs a new handle to the standard error of the current process.This handle is not buffered.ExamplesUsing implicit synchronization:Using explicit synchronization:"],["stdin","Constructs a new handle to the standard input of the current process.Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the `lock() method`.ExamplesUsing implicit synchronization:Using explicit synchronization:"],["stdout","Constructs a new handle to the standard output of the current process.Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the Stdout::lock method.ExamplesUsing implicit synchronization:Using explicit synchronization:"]],"struct":[["Stderr","A handle to the standard error stream of a process.For more information, see the `io::stderr` method."],["StderrLock","A locked reference to the `Stderr` handle.This handle implements the `Write` trait and is constructed via the `Stderr::lock` method."],["Stdin","A handle to the standard input stream of a process.Each handle is a shared reference to a global buffer of input data to this process. A handle can be `lock`'d to gain full access to `BufRead` methods (e.g. `.lines()`). Writes to this handle are otherwise locked with respect to other writes.This handle implements the `Read` trait, but beware that concurrent reads of `Stdin` must be executed with care.Created by the `io::stdin` method."],["StdinLock","A locked reference to the `Stdin` handle.This handle implements both the `Read` and `BufRead` traits, and is constructed via the `Stdin::lock` method."],["Stdout","A handle to the global standard output stream of the current process.Each handle shares a global buffer of data to be written to the standard output stream. Access is also synchronized via a lock and explicit control over locking is available via the `lock` method.Created by the `io::stdout` method."],["StdoutLock","A locked reference to the `Stdout` handle.This handle implements the `Write` trait, and is constructed via the `Stdout::lock` method."]]});