initSidebarItems({"enum":[["ErrorKind","A list specifying general categories of I/O error.This list is intended to grow over time and it is not recommended to exhaustively match against it."]],"struct":[["Error","The error type for I/O operations of the `Read`, `Write`, `Seek`, and associated traits.Errors mostly originate from the underlying OS, but custom instances of `Error` can be created with crafted error messages and a particular value of `ErrorKind`."]],"type":[["Result","A specialized `Result` type for I/O operations.This type is broadly used across `std::io` for any operation which may produce an error.This typedef is generally used to avoid writing out `io::Error` directly and is otherwise a direct mapping to `Result`.While usual Rust style is to import types directly, aliases of `Result` often are not, to make it easier to distinguish between them. `Result` is generally assumed to be `std::result::Result`, and so users of this alias will generally use `io::Result` instead of shadowing the prelude's import of `std::result::Result`.ExamplesA convenience function that bubbles an `io::Result` to its caller:"]]});