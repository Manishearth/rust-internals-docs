initSidebarItems({"fn":[["thread_rng","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<isize>()`.The RNG provided will reseed itself from the operating system after generating a certain amount of randomness.The internal RNG used is platform and architecture dependent, even if the operating system random number generator is rigged to give the same sequence always. If absolute consistency is required, explicitly select an RNG, e.g. `IsaacRng` or `Isaac64Rng`."]],"mod":[["reader","A wrapper around any Read to treat it as an RNG."],["reseeding","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes."]],"struct":[["Isaac64Rng","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.The ISAAC algorithm is generally accepted as suitable for cryptographic purposes, but this implementation has not be verified as such. Prefer a generator like `OsRng` that defers to the operating system for cases that need high security.[1]: Bob Jenkins, *ISAAC: A fast cryptographic random number generator*"],["IsaacRng","A random number generator that uses the ISAAC algorithm[1].The ISAAC algorithm is generally accepted as suitable for cryptographic purposes, but this implementation has not be verified as such. Prefer a generator like `OsRng` that defers to the operating system for cases that need high security.[1]: Bob Jenkins, *ISAAC: A fast cryptographic random number generator*"],["ThreadRng","The thread-local RNG."],["XorShiftRng","An Xorshift[1] random number generator.The Xorshift algorithm is not suitable for cryptographic purposes but is very fast. If you do not know for sure that it fits your requirements, use a more secure one such as `IsaacRng` or `OsRng`.[1]: Marsaglia, George (July 2003). \"Xorshift RNGs\". *Journal of Statistical Software*. Vol. 8 (Issue 14)."]],"trait":[["Rng","A random number generator."],["SeedableRng","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times."]]});