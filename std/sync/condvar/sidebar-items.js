initSidebarItems({"constant":[["CONDVAR_INIT","Constant initializer for a statically allocated condition variable."]],"struct":[["Condvar","A Condition VariableCondition variables represent the ability to block a thread such that it consumes no CPU time while waiting for an event to occur. Condition variables are typically associated with a boolean predicate (a condition) and a mutex. The predicate is always verified inside of the mutex before determining that thread must block.Functions in this module will block the current **thread** of execution and are bindings to system-provided condition variables where possible. Note that this module places one additional restriction over the system condition variables: each condvar can be used with precisely one mutex at runtime. Any attempt to use multiple mutexes on the same condition variable will result in a runtime panic. If this is not desired, then the unsafe primitives in `sys` do not have this restriction but may result in undefined behavior.Examples"],["StaticCondvar","Statically allocated condition variables.This structure is identical to `Condvar` except that it is suitable for use in static initializers for other structures.Examples"],["WaitTimeoutResult","A type indicating whether a timed wait on a condition variable returned due to a time out or not."]]});