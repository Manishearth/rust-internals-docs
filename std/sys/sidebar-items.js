initSidebarItems({"mod":[["backtrace",""],["ext","Experimental extensions to `std` for Unix platforms.For now, this module is limited to extracting file descriptors, but its functionality will grow over time.Example"],["net",""],["os","Implementation of `std::os` functionality for unix systems"],["weak","Support for \"weak linkage\" to symbols on UnixSome I/O operations we do in libstd require newer versions of OSes but we need to maintain binary compatibility with older releases for now. In order to use the new functionality when available we use this module for detection.One option to use here is weak linkage, but that is unfortunately only really workable on Linux. Hence, use dlsym to get the symbol value at runtime. This is also done for compatibility with older versions of glibc, and to avoid creating dependencies on GLIBC_PRIVATE symbols. It assumes that we've been dynamically linked to the library the symbol comes from, but that is currently always the case for things like libpthread/libc.A long time ago this used weak linkage for the __pthread_get_minstack symbol, but that caused Debian to detect an unnecessarily strict versioned dependency on libc6 (#23628)."]]});