initSidebarItems({"enum":[["TryLockError","An enumeration of possible errors which can occur while calling the `try_lock` method."]],"struct":[["PoisonError","A type of error which can be returned whenever a lock is acquired.Both Mutexes and RwLocks are poisoned whenever a thread fails while the lock is held. The precise semantics for when a lock is poisoned is documented on each lock, but once a lock is poisoned then all future acquisitions will return this error."]],"type":[["LockResult","A type alias for the result of a lock method which can be poisoned.The `Ok` variant of this result indicates that the primitive was not poisoned, and the `Guard` is contained within. The `Err` variant indicates that the primitive was poisoned. Note that the `Err` variant *also* carries the associated guard, and it can be acquired through the `into_inner` method."],["TryLockResult","A type alias for the result of a nonblocking locking method.For more information, see `LockResult`. A `TryLockResult` doesn't necessarily hold the associated guard in the `Err` type as the lock may not have been acquired for other reasons."]]});