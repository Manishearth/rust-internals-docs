initSidebarItems({"enum":[["Level","Setting for how to handle a lint."],["LintSource","How a lint level was set."]],"fn":[["check_ast_crate",""],["check_crate","Perform lint checking on a crate."],["gather_attrs","Parse the lint attributes into a vector, with `Err`s for malformed lint attributes. Writing this as an iterator is an enormous mess."],["raw_emit_lint","Emit a lint as a warning or an error (or not at all) according to `level`."],["raw_struct_lint",""]],"mod":[["builtin","Some lints that are built in to the compiler."]],"struct":[["EarlyContext","Context for lint checking of the AST, after expansion, before lowering to HIR."],["FutureIncompatibleInfo","Extra information for a future incompatibility lint. See the call to `register_future_incompatible` in `librustc_lint/lib.rs` for guidelines."],["LateContext","Context for lint checking after type checking."],["Lint","Specification of a single lint."],["LintId","Identifies a lint known to the compiler."],["LintStore","Information about the registered lints."]],"trait":[["EarlyLintPass",""],["LateLintPass","Trait for types providing lint checks."],["LintContext",""],["LintPass",""]],"type":[["EarlyLintPassObject","A lint pass boxed up as a trait object."],["LateLintPassObject",""],["LevelSource",""],["LintArray",""]]});