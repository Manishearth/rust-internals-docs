(function() {var implementors = {};
implementors["term"] = ["impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='term/terminfo/parm/enum.Param.html' title='term::terminfo::parm::Param'>Param</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='term/enum.Attr.html' title='term::Attr'>Attr</a>",];implementors["getopts"] = ["impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='getopts/enum.Name.html' title='getopts::Name'>Name</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='getopts/enum.HasArg.html' title='getopts::HasArg'>HasArg</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='getopts/enum.Occur.html' title='getopts::Occur'>Occur</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='getopts/struct.Opt.html' title='getopts::Opt'>Opt</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='getopts/struct.OptGroup.html' title='getopts::OptGroup'>OptGroup</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='getopts/struct.Matches.html' title='getopts::Matches'>Matches</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='getopts/enum.Fail.html' title='getopts::Fail'>Fail</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='getopts/enum.FailType.html' title='getopts::FailType'>FailType</a>",];implementors["test"] = ["impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/stats/struct.Summary.html' title='test::stats::Summary'>Summary</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='test/enum.TestName.html' title='test::TestName'>TestName</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/struct.Bencher.html' title='test::Bencher'>Bencher</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='test/enum.ShouldPanic.html' title='test::ShouldPanic'>ShouldPanic</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/struct.TestDesc.html' title='test::TestDesc'>TestDesc</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/struct.TestPaths.html' title='test::TestPaths'>TestPaths</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/struct.Metric.html' title='test::Metric'>Metric</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/struct.MetricMap.html' title='test::MetricMap'>MetricMap</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='test/enum.ColorConfig.html' title='test::ColorConfig'>ColorConfig</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='test/struct.BenchSamples.html' title='test::BenchSamples'>BenchSamples</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='test/enum.TestResult.html' title='test::TestResult'>TestResult</a>",];implementors["rand"] = ["impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/distributions/normal/struct.StandardNormal.html' title='rand::distributions::normal::StandardNormal'>StandardNormal</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/distributions/normal/struct.Normal.html' title='rand::distributions::normal::Normal'>Normal</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/distributions/normal/struct.LogNormal.html' title='rand::distributions::normal::LogNormal'>LogNormal</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/distributions/exponential/struct.Exp1.html' title='rand::distributions::exponential::Exp1'>Exp1</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/distributions/exponential/struct.Exp.html' title='rand::distributions::exponential::Exp'>Exp</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/isaac/struct.IsaacRng.html' title='rand::isaac::IsaacRng'>IsaacRng</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/isaac/struct.Isaac64Rng.html' title='rand::isaac::Isaac64Rng'>Isaac64Rng</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/chacha/struct.ChaChaRng.html' title='rand::chacha::ChaChaRng'>ChaChaRng</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/reseeding/struct.ReseedWithDefault.html' title='rand::reseeding::ReseedWithDefault'>ReseedWithDefault</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rand/struct.XorShiftRng.html' title='rand::XorShiftRng'>XorShiftRng</a>",];implementors["collections"] = ["impl&lt;I&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rustc_unicode/u_str/struct.Utf16Encoder.html' title='rustc_unicode::u_str::Utf16Encoder'>Utf16Encoder</a>&lt;I&gt; <span class='where'>where I: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;I&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rustc_unicode/char/struct.DecodeUtf16.html' title='rustc_unicode::char::DecodeUtf16'>DecodeUtf16</a>&lt;I&gt; <span class='where'>where I: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + <a class='trait' href='core/iter/iterator/trait.Iterator.html' title='core::iter::iterator::Iterator'>Iterator</a>&lt;Item=u16&gt;</span>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='rustc_unicode/char/struct.DecodeUtf16Error.html' title='rustc_unicode::char::DecodeUtf16Error'>DecodeUtf16Error</a>","impl&lt;T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/boxed/struct.Box.html' title='collections::boxed::Box'>Box</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/boxed/struct.Box.html' title='collections::boxed::Box'>Box</a>&lt;str&gt;","impl&lt;T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/boxed/struct.Box.html' title='collections::boxed::Box'>Box</a>&lt;[T]&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt; <span class='where'>where T: ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='alloc/arc/struct.Weak.html' title='alloc::arc::Weak'>Weak</a>&lt;T&gt; <span class='where'>where T: ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt; <span class='where'>where T: ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='alloc/rc/struct.Weak.html' title='alloc::rc::Weak'>Weak</a>&lt;T&gt; <span class='where'>where T: ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/boxed/struct.ExchangeHeapSingleton.html' title='collections::boxed::ExchangeHeapSingleton'>ExchangeHeapSingleton</a>","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/binary_heap/struct.Iter.html' title='collections::binary_heap::Iter'>Iter</a>&lt;'a, T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/binary_heap/struct.IntoIter.html' title='collections::binary_heap::IntoIter'>IntoIter</a>&lt;T&gt;","impl&lt;K:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>, V:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_map/struct.BTreeMap.html' title='collections::btree_map::BTreeMap'>BTreeMap</a>&lt;K, V&gt;","impl&lt;'a, K, V&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_map/struct.Iter.html' title='collections::btree_map::Iter'>Iter</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_map/struct.Keys.html' title='collections::btree_map::Keys'>Keys</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_map/struct.Values.html' title='collections::btree_map::Values'>Values</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_map/struct.Range.html' title='collections::btree_map::Range'>Range</a>&lt;'a, K, V&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.BTreeSet.html' title='collections::btree_set::BTreeSet'>BTreeSet</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.Iter.html' title='collections::btree_set::Iter'>Iter</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.Range.html' title='collections::btree_set::Range'>Range</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.Difference.html' title='collections::btree_set::Difference'>Difference</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.SymmetricDifference.html' title='collections::btree_set::SymmetricDifference'>SymmetricDifference</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.Intersection.html' title='collections::btree_set::Intersection'>Intersection</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/btree_set/struct.Union.html' title='collections::btree_set::Union'>Union</a>&lt;'a, T&gt;","impl&lt;'a, B:&nbsp;?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, B&gt; <span class='where'>where B: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='collections::borrow::ToOwned'>ToOwned</a></span>","impl&lt;E&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt;","impl&lt;E&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/enum_set/struct.Iter.html' title='collections::enum_set::Iter'>Iter</a>&lt;E&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/linked_list/struct.Iter.html' title='collections::linked_list::Iter'>Iter</a>&lt;'a, T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/linked_list/struct.IntoIter.html' title='collections::linked_list::IntoIter'>IntoIter</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/str/struct.EncodeUtf16.html' title='collections::str::EncodeUtf16'>EncodeUtf16</a>&lt;'a&gt;","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='collections/string/enum.ParseError.html' title='collections::string::ParseError'>ParseError</a>","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/vec/struct.IntoIter.html' title='collections::vec::IntoIter'>IntoIter</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/vec_deque/struct.Iter.html' title='collections::vec_deque::Iter'>Iter</a>&lt;'a, T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='struct' href='collections/vec_deque/struct.IntoIter.html' title='collections::vec_deque::IntoIter'>IntoIter</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> for <a class='enum' href='collections/enum.Bound.html' title='collections::Bound'>Bound</a>&lt;T&gt;",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
