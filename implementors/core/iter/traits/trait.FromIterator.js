(function() {var implementors = {};
implementors["collections"] = ["impl&lt;T:&nbsp;<a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a>&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;","impl&lt;K:&nbsp;<a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a>, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;(K, V)&gt; for <a class='struct' href='collections/btree_map/struct.BTreeMap.html' title='collections::btree_map::BTreeMap'>BTreeMap</a>&lt;K, V&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a>&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree_set/struct.BTreeSet.html' title='collections::btree_set::BTreeSet'>BTreeSet</a>&lt;T&gt;","impl&lt;E:&nbsp;<a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a>&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;char&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;char&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b str&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, [T]&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;",];implementors["rustc_unicode"] = [];implementors["rustc_data_structures"] = ["impl&lt;A:&nbsp;<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a>&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::Element&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I:&nbsp;<a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a>, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt;","impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;",];implementors["syntax"] = ["impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;",];implementors["rustc"] = ["impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>",];implementors["rustc_lint"] = ["impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;",];implementors["rustc_trans"] = ["impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>",];implementors["rustc_metadata"] = ["impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>",];implementors["rustc_mir"] = ["impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;",];implementors["rustc_typeck"] = ["impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>",];implementors["rustc_borrowck"] = ["impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>",];implementors["rustdoc"] = ["impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/util/small_vector/struct.SmallVector.html' title='syntax::util::small_vector::SmallVector'>SmallVector</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;K, V&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='collections/btree/map/struct.BTreeMap.html' title='collections::btree::map::BTreeMap'>BTreeMap</a>&lt;K, V&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/btree/set/struct.BTreeSet.html' title='collections::btree::set::BTreeSet'>BTreeSet</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;E&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt; <span class='where'>where E: <a class='trait' href='collections/enum_set/trait.CLike.html' title='collections::enum_set::CLike'>CLike</a></span>","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/linked_list/struct.LinkedList.html' title='collections::linked_list::LinkedList'>LinkedList</a>&lt;T&gt;","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;K, V, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>K, V<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='std/collections/hash/map/struct.HashMap.html' title='std::collections::hash::map::HashMap'>HashMap</a>&lt;K, V, S&gt; <span class='where'>where K: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a>, S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;T, S&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/hash/set/struct.HashSet.html' title='std::collections::hash::set::HashSet'>HashSet</a>&lt;T, S&gt; <span class='where'>where S: <a class='trait' href='core/hash/trait.BuildHasher.html' title='core::hash::BuildHasher'>BuildHasher</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a>, T: <a class='trait' href='core/cmp/trait.Eq.html' title='core::cmp::Eq'>Eq</a> + <a class='trait' href='core/hash/trait.Hash.html' title='core::hash::Hash'>Hash</a></span>","impl&lt;P&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where P: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;</span>","impl&lt;A&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;A::<a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Element</a>&gt; for <a class='enum' href='rustc_data_structures/accumulate_vec/enum.AccumulateVec.html' title='rustc_data_structures::accumulate_vec::AccumulateVec'>AccumulateVec</a>&lt;A&gt; <span class='where'>where A: <a class='trait' href='rustc_data_structures/array_vec/trait.Array.html' title='rustc_data_structures::array_vec::Array'>Array</a></span>","impl <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='rustc_data_structures/bitvec/struct.BitVector.html' title='rustc_data_structures::bitvec::BitVector'>BitVector</a>","impl&lt;I, T&gt; <a class='trait' href='core/iter/traits/trait.FromIterator.html' title='core::iter::traits::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='rustc_data_structures/indexed_vec/struct.IndexVec.html' title='rustc_data_structures::indexed_vec::IndexVec'>IndexVec</a>&lt;I, T&gt; <span class='where'>where I: <a class='trait' href='rustc_data_structures/indexed_vec/trait.Idx.html' title='rustc_data_structures::indexed_vec::Idx'>Idx</a></span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
