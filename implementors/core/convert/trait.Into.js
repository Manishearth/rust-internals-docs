(function() {var implementors = {};
implementors["core"] = [];
implementors["rustc"] = ["impl <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"syntax/ast/struct.NodeId.html\" title=\"struct syntax::ast::NodeId\">NodeId</a>, <a class=\"enum\" href=\"rustc/hir/enum.LoopIdError.html\" title=\"enum rustc::hir::LoopIdError\">LoopIdError</a>&gt;&gt; for <a class=\"enum\" href=\"rustc/hir/enum.LoopIdResult.html\" title=\"enum rustc::hir::LoopIdResult\">LoopIdResult</a>",];
implementors["syntax"] = ["impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"syntax/util/struct.ThinVec.html\" title=\"struct syntax::util::ThinVec\">ThinVec</a>&lt;T&gt;","impl <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"syntax/ptr/struct.P.html\" title=\"struct syntax::ptr::P\">P</a>&lt;<a class=\"enum\" href=\"syntax/ast/enum.PathParameters.html\" title=\"enum syntax::ast::PathParameters\">PathParameters</a>&gt;&gt;&gt; for <a class=\"struct\" href=\"syntax/ast/struct.AngleBracketedParameterData.html\" title=\"struct syntax::ast::AngleBracketedParameterData\">AngleBracketedParameterData</a>","impl <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"syntax/ptr/struct.P.html\" title=\"struct syntax::ptr::P\">P</a>&lt;<a class=\"enum\" href=\"syntax/ast/enum.PathParameters.html\" title=\"enum syntax::ast::PathParameters\">PathParameters</a>&gt;&gt;&gt; for <a class=\"struct\" href=\"syntax/ast/struct.ParenthesizedParameterData.html\" title=\"struct syntax::ast::ParenthesizedParameterData\">ParenthesizedParameterData</a>","impl&lt;T&gt; <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"syntax/ptr/struct.P.html\" title=\"struct syntax::ptr::P\">P</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a>T<a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;","impl <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"syntax/ext/base/enum.Annotatable.html\" title=\"enum syntax::ext::base::Annotatable\">Annotatable</a>&gt;&gt; for <a class=\"enum\" href=\"syntax/ext/base/enum.Annotatable.html\" title=\"enum syntax::ext::base::Annotatable\">Annotatable</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
