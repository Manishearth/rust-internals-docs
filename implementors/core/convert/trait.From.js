(function() {var implementors = {};
implementors["collections"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='collections/boxed/struct.Box.html' title='collections::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;u8&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, [T]&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, [T]&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;",];implementors["alloc"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["rustc_unicode"] = [];implementors["syntax_pos"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>",];implementors["rustc_data_structures"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>",];implementors["core"] = [];implementors["serialize"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>",];implementors["syntax"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/struct.ThinVec.html' title='syntax::util::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/struct.ThinVec.html' title='syntax::util::ThinVec'>ThinVec</a>&lt;<a class='type' href='syntax/ast/type.Attribute.html' title='syntax::ast::Attribute'>Attribute</a>&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ext/quote/rt/struct.Span.html' title='syntax::ext::quote::rt::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>",];implementors["rustc"] = ["impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='type' href='rustc/ty/type.Ty.html' title='rustc::ty::Ty'>Ty</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/enum.Region.html' title='rustc::ty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;",];implementors["rustc_lint"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='struct' href='rustc/ty/struct.TyS.html' title='rustc::ty::TyS'>TyS</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/sty/enum.Region.html' title='rustc::ty::sty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/err/enum.ConstMathErr.html' title='rustc_const_math::err::ConstMathErr'>ConstMathErr</a>&gt; for <a class='enum' href='rustc_const_eval/eval/enum.ErrKind.html' title='rustc_const_eval::eval::ErrKind'>ErrKind</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;",];implementors["rustc_metadata"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='struct' href='rustc/ty/struct.TyS.html' title='rustc::ty::TyS'>TyS</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/sty/enum.Region.html' title='rustc::ty::sty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>",];implementors["rustc_trans"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='struct' href='rustc/ty/struct.TyS.html' title='rustc::ty::TyS'>TyS</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/sty/enum.Region.html' title='rustc::ty::sty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/err/enum.ConstMathErr.html' title='rustc_const_math::err::ConstMathErr'>ConstMathErr</a>&gt; for <a class='enum' href='rustc_const_eval/eval/enum.ErrKind.html' title='rustc_const_eval::eval::ErrKind'>ErrKind</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='type' href='rustc/ty/type.Disr.html' title='rustc::ty::Disr'>Disr</a>&gt; for <a class='struct' href='rustc_trans/struct.Disr.html' title='rustc_trans::Disr'>Disr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='rustc_trans/struct.Disr.html' title='rustc_trans::Disr'>Disr</a>",];implementors["rustc_const_eval"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/err/enum.ConstMathErr.html' title='rustc_const_math::err::ConstMathErr'>ConstMathErr</a>&gt; for <a class='enum' href='rustc_const_eval/enum.ErrKind.html' title='rustc_const_eval::ErrKind'>ErrKind</a>",];implementors["rustc_save_analysis"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.UseData.html' title='rustc_save_analysis::external_data::UseData'>UseData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Import&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.UseGlobData.html' title='rustc_save_analysis::external_data::UseGlobData'>UseGlobData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Import&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.EnumData.html' title='rustc_save_analysis::external_data::EnumData'>EnumData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.TupleVariantData.html' title='rustc_save_analysis::external_data::TupleVariantData'>TupleVariantData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.StructVariantData.html' title='rustc_save_analysis::external_data::StructVariantData'>StructVariantData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.StructData.html' title='rustc_save_analysis::external_data::StructData'>StructData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.TraitData.html' title='rustc_save_analysis::external_data::TraitData'>TraitData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.FunctionData.html' title='rustc_save_analysis::external_data::FunctionData'>FunctionData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.MethodData.html' title='rustc_save_analysis::external_data::MethodData'>MethodData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.MacroData.html' title='rustc_save_analysis::external_data::MacroData'>MacroData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.ModData.html' title='rustc_save_analysis::external_data::ModData'>ModData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.TypeDefData.html' title='rustc_save_analysis::external_data::TypeDefData'>TypeDefData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.VariableData.html' title='rustc_save_analysis::external_data::VariableData'>VariableData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='syntax/ast/enum.Visibility.html' title='syntax::ast::Visibility'>Visibility</a>&gt; for <a class='enum' href='rustc_save_analysis/enum.Visibility.html' title='rustc_save_analysis::Visibility'>Visibility</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='rustc/hir/enum.Visibility.html' title='rustc::hir::Visibility'>Visibility</a>&gt; for <a class='enum' href='rustc_save_analysis/enum.Visibility.html' title='rustc_save_analysis::Visibility'>Visibility</a>",];implementors["rustc_typeck"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='struct' href='rustc/ty/struct.TyS.html' title='rustc::ty::TyS'>TyS</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/sty/enum.Region.html' title='rustc::ty::sty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/err/enum.ConstMathErr.html' title='rustc_const_math::err::ConstMathErr'>ConstMathErr</a>&gt; for <a class='enum' href='rustc_const_eval/eval/enum.ErrKind.html' title='rustc_const_eval::eval::ErrKind'>ErrKind</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>",];implementors["rustc_borrowck"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='struct' href='rustc/ty/struct.TyS.html' title='rustc::ty::TyS'>TyS</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/sty/enum.Region.html' title='rustc::ty::sty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/err/enum.ConstMathErr.html' title='rustc_const_math::err::ConstMathErr'>ConstMathErr</a>&gt; for <a class='enum' href='rustc_const_eval/eval/enum.ErrKind.html' title='rustc_const_eval::eval::ErrKind'>ErrKind</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>",];implementors["rustdoc"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='syntax/ast/enum.IntTy.html' title='syntax::ast::IntTy'>IntTy</a>&gt; for <a class='enum' href='rustdoc/clean/enum.PrimitiveType.html' title='rustdoc::clean::PrimitiveType'>PrimitiveType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='syntax/ast/enum.UintTy.html' title='syntax::ast::UintTy'>UintTy</a>&gt; for <a class='enum' href='rustdoc/clean/enum.PrimitiveType.html' title='rustdoc::clean::PrimitiveType'>PrimitiveType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='syntax/ast/enum.FloatTy.html' title='syntax::ast::FloatTy'>FloatTy</a>&gt; for <a class='enum' href='rustdoc/clean/enum.PrimitiveType.html' title='rustdoc::clean::PrimitiveType'>PrimitiveType</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='syntax/util/thin_vec/struct.ThinVec.html' title='syntax::util::thin_vec::ThinVec'>ThinVec</a>&lt;<a class='struct' href='syntax/codemap/struct.Spanned.html' title='syntax::codemap::Spanned'>Spanned</a>&lt;<a class='struct' href='syntax/ast/struct.Attribute_.html' title='syntax::ast::Attribute_'>Attribute_</a>&gt;&gt;&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='struct' href='syntax/ast/struct.Expr.html' title='syntax::ast::Expr'>Expr</a>&gt;&gt; for <a class='enum' href='syntax/parse/parser/enum.LhsExpr.html' title='syntax::parse::parser::LhsExpr'>LhsExpr</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='syntax/ptr/struct.P.html' title='syntax::ptr::P'>P</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/err/enum.ConstMathErr.html' title='rustc_const_math::err::ConstMathErr'>ConstMathErr</a>&gt; for <a class='enum' href='rustc_const_eval/eval/enum.ErrKind.html' title='rustc_const_eval::eval::ErrKind'>ErrKind</a>","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='struct' href='rustc/ty/struct.TyS.html' title='rustc::ty::TyS'>TyS</a>&lt;'tcx&gt;&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;'tcx&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'tcx <a class='enum' href='rustc/ty/sty/enum.Region.html' title='rustc::ty::sty::Region'>Region</a>&gt; for <a class='struct' href='rustc/ty/subst/struct.Kind.html' title='rustc::ty::subst::Kind'>Kind</a>&lt;'tcx&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.UseData.html' title='rustc_save_analysis::external_data::UseData'>UseData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Import&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.UseGlobData.html' title='rustc_save_analysis::external_data::UseGlobData'>UseGlobData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Import&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.EnumData.html' title='rustc_save_analysis::external_data::EnumData'>EnumData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.TupleVariantData.html' title='rustc_save_analysis::external_data::TupleVariantData'>TupleVariantData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.StructVariantData.html' title='rustc_save_analysis::external_data::StructVariantData'>StructVariantData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.StructData.html' title='rustc_save_analysis::external_data::StructData'>StructData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.TraitData.html' title='rustc_save_analysis::external_data::TraitData'>TraitData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.FunctionData.html' title='rustc_save_analysis::external_data::FunctionData'>FunctionData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.MethodData.html' title='rustc_save_analysis::external_data::MethodData'>MethodData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.MacroData.html' title='rustc_save_analysis::external_data::MacroData'>MacroData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.ModData.html' title='rustc_save_analysis::external_data::ModData'>ModData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.TypeDefData.html' title='rustc_save_analysis::external_data::TypeDefData'>TypeDefData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='rustc_save_analysis/external_data/struct.VariableData.html' title='rustc_save_analysis::external_data::VariableData'>VariableData</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;Def&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='syntax/ast/enum.Visibility.html' title='syntax::ast::Visibility'>Visibility</a>&gt; for <a class='enum' href='rustc_save_analysis/data/enum.Visibility.html' title='rustc_save_analysis::data::Visibility'>Visibility</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='rustc/hir/enum.Visibility.html' title='rustc::hir::Visibility'>Visibility</a>&gt; for <a class='enum' href='rustc_save_analysis/data/enum.Visibility.html' title='rustc_save_analysis::data::Visibility'>Visibility</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='serialize/json/enum.EncoderError.html' title='serialize::json::EncoderError'>EncoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_const_math/int/enum.ConstInt.html' title='rustc_const_math::int::ConstInt'>ConstInt</a>&gt; for <a class='struct' href='rustc_trans/disr/struct.Disr.html' title='rustc_trans::disr::Disr'>Disr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='rustc_trans/disr/struct.Disr.html' title='rustc_trans::disr::Disr'>Disr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='syntax_pos/struct.Span.html' title='syntax_pos::Span'>Span</a>&gt; for <a class='struct' href='syntax_pos/struct.MultiSpan.html' title='syntax_pos::MultiSpan'>MultiSpan</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='rustdoc/clean/struct.Item.html' title='rustdoc::clean::Item'>Item</a>&gt; for <a class='enum' href='rustdoc/html/item_type/enum.ItemType.html' title='rustdoc::html::item_type::ItemType'>ItemType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustdoc/clean/enum.TypeKind.html' title='rustdoc::clean::TypeKind'>TypeKind</a>&gt; for <a class='enum' href='rustdoc/html/item_type/enum.ItemType.html' title='rustdoc::html::item_type::ItemType'>ItemType</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
