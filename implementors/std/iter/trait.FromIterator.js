(function() {var implementors = {};
implementors['std'] = ["impl&lt;T&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/binary_heap/struct.BinaryHeap.html' title='std::collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;","impl <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;<a href='primitive.bool.html'>bool</a>&gt; for <a class='struct' href='std/collections/bit_vec/struct.BitVec.html' title='std::collections::bit_vec::BitVec'>BitVec</a>","impl <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;<a href='primitive.usize.html'>usize</a>&gt; for <a class='struct' href='std/collections/bit_set/struct.BitSet.html' title='std::collections::bit_set::BitSet'>BitSet</a>","impl&lt;K, V&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;<a href='primitive.tuple.html'>(K, V)</a>&gt; for <a class='struct' href='std/collections/btree_map/struct.BTreeMap.html' title='std::collections::btree_map::BTreeMap'>BTreeMap</a>&lt;K, V&gt;","impl&lt;T&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/btree_set/struct.BTreeSet.html' title='std::collections::btree_set::BTreeSet'>BTreeSet</a>&lt;T&gt;","impl&lt;E&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;E&gt; for <a class='struct' href='collections/enum_set/struct.EnumSet.html' title='collections::enum_set::EnumSet'>EnumSet</a>&lt;E&gt;","impl&lt;A&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='std/collections/linked_list/struct.LinkedList.html' title='std::collections::linked_list::LinkedList'>LinkedList</a>&lt;A&gt;","impl <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;<a href='primitive.char.html'>char</a>&gt; for <a class='struct' href='std/string/struct.String.html' title='std::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;&amp;'a <a href='primitive.str.html'>str</a>&gt; for <a class='struct' href='std/string/struct.String.html' title='std::string::String'>String</a>","impl&lt;T&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/vec/struct.Vec.html' title='std::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='enum' href='std/borrow/enum.Cow.html' title='std::borrow::Cow'>Cow</a>&lt;'a, <a href='primitive.slice.html'>[T]</a>&gt;","impl&lt;A&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;A&gt; for <a class='struct' href='std/collections/vec_deque/struct.VecDeque.html' title='std::collections::vec_deque::VecDeque'>VecDeque</a>&lt;A&gt;","impl&lt;V&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;<a href='primitive.tuple.html'>(<a href='primitive.usize.html'>usize</a>, V)</a>&gt; for <a class='struct' href='std/collections/vec_map/struct.VecMap.html' title='std::collections::vec_map::VecMap'>VecMap</a>&lt;V&gt;","impl&lt;K, V, S&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;<a href='primitive.tuple.html'>(K, V)</a>&gt; for <a class='struct' href='std/collections/struct.HashMap.html' title='std::collections::HashMap'>HashMap</a>&lt;K, V, S&gt;","impl&lt;T, S&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;T&gt; for <a class='struct' href='std/collections/struct.HashSet.html' title='std::collections::HashSet'>HashSet</a>&lt;T, S&gt;","impl&lt;P: <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;&gt; <a class='trait' href='std/iter/trait.FromIterator.html' title='std::iter::FromIterator'>FromIterator</a>&lt;P&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
