(function() {var implementors = {};
implementors['std'] = ["impl&lt;'a, T&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;T&gt; for <a class='enum' href='std/borrow/enum.Cow.html' title='std::borrow::Cow'>Cow</a>&lt;'a, T&gt; <span class='where'>where T: <a class='trait' href='std/borrow/trait.ToOwned.html' title='std::borrow::ToOwned'>ToOwned</a> + ?<a class='trait' href='std/marker/trait.Sized.html' title='std::marker::Sized'>Sized</a></span>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a href='primitive.str.html'>str</a>&gt; for <a class='struct' href='std/string/struct.String.html' title='std::string::String'>String</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a href='primitive.slice.html'>[<a href='primitive.u8.html'>u8</a>]</a>&gt; for <a class='struct' href='std/string/struct.String.html' title='std::string::String'>String</a>","impl&lt;T&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/vec/struct.Vec.html' title='std::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='std/vec/struct.Vec.html' title='std::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a href='primitive.slice.html'>[T]</a>&gt; for <a class='struct' href='std/vec/struct.Vec.html' title='std::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/ffi/struct.OsString.html' title='std::ffi::OsString'>OsString</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a href='primitive.str.html'>str</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/string/struct.String.html' title='std::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='enum' href='std/path/enum.Component.html' title='std::path::Component'>Component</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/path/struct.Components.html' title='std::path::Components'>Components</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/path/struct.Components.html' title='std::path::Components'>Components</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/path/struct.Iter.html' title='std::path::Iter'>Iter</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/path/struct.Iter.html' title='std::path::Iter'>Iter</a>&lt;'a&gt;","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>&gt; for <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/ffi/struct.OsStr.html' title='std::ffi::OsStr'>OsStr</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/ffi/struct.OsString.html' title='std::ffi::OsString'>OsString</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a href='primitive.str.html'>str</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/string/struct.String.html' title='std::string::String'>String</a>","impl <a class='trait' href='std/convert/trait.AsRef.html' title='std::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
