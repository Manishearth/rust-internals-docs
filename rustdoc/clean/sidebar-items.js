initSidebarItems({"enum":[["FunctionRetTy",""],["ImplPolarity",""],["Import",""],["ItemEnum",""],["Mutability",""],["PathParameters",""],["PrimitiveType",""],["SelfTy",""],["TyParamBound",""],["Type","A representation of a Type suitable for hyperlinking purposes. Ideally one can get the original type out of the AST/TyCtxt given one of these, if more information is needed. Most importantly it does not preserve mutability or boxes."],["TypeKind",""],["VariantKind",""],["Visibility",""],["WherePredicate",""]],"mod":[["cfg","Representation of a `#[doc(cfg(...))]` attribute."],["inline","Support for inlining external documentation into the current AST."]],"struct":[["Argument",""],["Arguments",""],["Attributes",""],["BareFunctionDecl",""],["Constant",""],["Crate",""],["DefaultImpl",""],["Deprecation",""],["Enum",""],["ExternalCrate",""],["FnDecl",""],["Function",""],["Generics",""],["Impl",""],["ImportSource",""],["Item","Anything with a source location and set of attributes and, optionally, a name. That is, anything that can be documented. This doesn't correspond directly to the AST's concept of an item; it's a strict superset."],["Lifetime",""],["ListAttributesIter",""],["Macro",""],["Method",""],["Module",""],["Path",""],["PathSegment",""],["PolyTrait","A trait reference, which may have higher ranked lifetimes."],["Span",""],["Stability",""],["Static",""],["Struct",""],["Trait",""],["TyMethod",""],["TyParam",""],["TypeBinding","An equality constraint on an associated type, e.g. `A=Bar` in `Foo<A=Bar>`"],["Typedef",""],["Union",""],["Variant",""],["VariantStruct","This is a more limited form of the standard Struct, different in that it lacks the things most items have (name, id, parameterization). Found only as a variant in an enum."]],"trait":[["AttributesExt",""],["Clean",""],["GetDefId",""],["NestedAttributesExt",""]]});