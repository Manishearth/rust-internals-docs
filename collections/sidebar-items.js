initSidebarItems({"enum":[["Bound","An endpoint of a range of keys."]],"macro":[["format","Use the syntax described in `std::fmt` to create a value of type `String`. See [`std::fmt`][fmt] for more information."],["vec","Creates a `Vec` containing the arguments."]],"mod":[["binary_heap","A priority queue implemented with a binary heap."],["borrow","A module for working with borrowed data."],["boxed","A pointer type for heap allocation."],["btree_map","A map based on a B-Tree."],["btree_set","A set based on a B-Tree."],["enum_set","A structure for holding a set of enum variants."],["fmt","Utilities for formatting and printing `String`s"],["linked_list","A doubly-linked list with owned nodes."],["range","Range syntax."],["slice","A dynamically-sized view into a contiguous sequence, `[T]`."],["str","Unicode string slices."],["string","A UTF-8 encoded, growable string."],["vec","A contiguous growable array type with heap-allocated contents, written `Vec<T>` but pronounced 'vector.'"],["vec_deque","VecDeque is a double-ended queue, which is implemented with the help of a growing ring buffer."]]});