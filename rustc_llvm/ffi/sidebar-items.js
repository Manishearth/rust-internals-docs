initSidebarItems({"constant":[["False",""],["True",""]],"enum":[["ArchiveChild_opaque",""],["ArchiveIterator_opaque",""],["ArchiveKind","LLVMRustArchiveKind"],["Archive_opaque",""],["AsmDialect","LLVMRustAsmDialect"],["AtomicOrdering","LLVMAtomicOrdering"],["AtomicRmwBinOp","LLVMAtomicRmwBinOp"],["BasicBlock_opaque",""],["Builder_opaque",""],["CallConv","LLVM CallingConv::ID. Should we wrap this?"],["CodeGenOptLevel","LLVMRustCodeGenOptLevel"],["CodeModel","LLVMRustCodeModel"],["Context_opaque",""],["DLLStorageClass","LLVMDLLStorageClass"],["DebugLoc_opaque",""],["DiagnosticInfo_opaque",""],["DiagnosticKind","LLVMRustDiagnosticKind"],["DiagnosticSeverity","LLVMDiagnosticSeverity"],["ExecutionEngine_opaque",""],["FileType","LLVMRustFileType"],["IntPredicate","LLVMIntPredicate"],["LLVMRustResult",""],["Linkage","LLVMLinkage"],["MemoryBuffer_opaque",""],["MetadataType","Enum pinned in LLVMContext, used in LLVMSetMetadata so ABI-stable."],["Metadata_opaque",""],["Module_opaque",""],["ObjectFile_opaque",""],["OperandBundleDef_opaque",""],["PassKind","LLVMRustPassKind"],["PassManagerBuilder_opaque",""],["PassManager_opaque",""],["Pass_opaque",""],["RealPredicate","LLVMRealPredicate"],["RelocMode","LLVMRelocMode"],["RustArchiveMember_opaque",""],["SMDiagnostic_opaque",""],["SectionIterator_opaque",""],["SynchronizationScope","LLVMRustSynchronizationScope"],["TargetData_opaque",""],["TargetMachine_opaque",""],["Twine_opaque",""],["TypeKind","LLVMTypeKind"],["Type_opaque",""],["Use_opaque",""],["Value_opaque",""]],"fn":[["LLVMABIAlignmentOfType","Returns the minimum alignment of a type."],["LLVMABISizeOfType","Distance between successive elements in an array of T. Includes ABI padding."],["LLVMAddAggressiveDCEPass",""],["LLVMAddAlias",""],["LLVMAddArgumentPromotionPass",""],["LLVMAddAttribute",""],["LLVMAddBasicAliasAnalysisPass",""],["LLVMAddCFGSimplificationPass",""],["LLVMAddCase",""],["LLVMAddClause",""],["LLVMAddConstantMergePass",""],["LLVMAddConstantPropagationPass",""],["LLVMAddCorrelatedValuePropagationPass",""],["LLVMAddDeadArgEliminationPass",""],["LLVMAddDeadStoreEliminationPass",""],["LLVMAddDestination",""],["LLVMAddEarlyCSEPass",""],["LLVMAddFunction",""],["LLVMAddFunctionAttrsPass",""],["LLVMAddFunctionInliningPass",""],["LLVMAddGVNPass",""],["LLVMAddGlobal",""],["LLVMAddGlobalDCEPass",""],["LLVMAddGlobalInAddressSpace",""],["LLVMAddGlobalOptimizerPass",""],["LLVMAddIPSCCPPass",""],["LLVMAddIncoming",""],["LLVMAddIndVarSimplifyPass",""],["LLVMAddInstrAttribute",""],["LLVMAddInstructionCombiningPass",""],["LLVMAddJumpThreadingPass",""],["LLVMAddLICMPass",""],["LLVMAddLoopDeletionPass",""],["LLVMAddLoopIdiomPass",""],["LLVMAddLoopRotatePass",""],["LLVMAddLoopUnrollPass",""],["LLVMAddLoopUnswitchPass",""],["LLVMAddMemCpyOptPass",""],["LLVMAddNamedMetadataOperand",""],["LLVMAddPruneEHPass",""],["LLVMAddReassociatePass",""],["LLVMAddSCCPPass",""],["LLVMAddScalarReplAggregatesPass",""],["LLVMAddScalarReplAggregatesPassSSA",""],["LLVMAddSimplifyLibCallsPass",""],["LLVMAddStripDeadPrototypesPass",""],["LLVMAddTailCallEliminationPass",""],["LLVMAddTypeBasedAliasAnalysisPass",""],["LLVMAddVerifierPass","Adds a verification pass."],["LLVMAlignOf",""],["LLVMAppendBasicBlockInContext",""],["LLVMBasicBlockAsValue",""],["LLVMBlockAddress",""],["LLVMBuildAShr",""],["LLVMBuildAdd",""],["LLVMBuildAggregateRet",""],["LLVMBuildAlloca",""],["LLVMBuildAnd",""],["LLVMBuildAtomicRMW",""],["LLVMBuildBinOp",""],["LLVMBuildBitCast",""],["LLVMBuildBr",""],["LLVMBuildCast",""],["LLVMBuildCondBr",""],["LLVMBuildExactSDiv",""],["LLVMBuildExtractElement",""],["LLVMBuildExtractValue",""],["LLVMBuildFAdd",""],["LLVMBuildFCmp",""],["LLVMBuildFDiv",""],["LLVMBuildFMul",""],["LLVMBuildFNeg",""],["LLVMBuildFPCast",""],["LLVMBuildFPExt",""],["LLVMBuildFPToSI",""],["LLVMBuildFPToUI",""],["LLVMBuildFPTrunc",""],["LLVMBuildFRem",""],["LLVMBuildFSub",""],["LLVMBuildFree",""],["LLVMBuildGEP",""],["LLVMBuildGlobalString",""],["LLVMBuildGlobalStringPtr",""],["LLVMBuildICmp",""],["LLVMBuildInBoundsGEP",""],["LLVMBuildIndirectBr",""],["LLVMBuildInsertElement",""],["LLVMBuildInsertValue",""],["LLVMBuildIntCast",""],["LLVMBuildIntToPtr",""],["LLVMBuildIsNotNull",""],["LLVMBuildIsNull",""],["LLVMBuildLShr",""],["LLVMBuildLoad",""],["LLVMBuildMul",""],["LLVMBuildNSWAdd",""],["LLVMBuildNSWMul",""],["LLVMBuildNSWNeg",""],["LLVMBuildNSWSub",""],["LLVMBuildNUWAdd",""],["LLVMBuildNUWMul",""],["LLVMBuildNUWNeg",""],["LLVMBuildNUWSub",""],["LLVMBuildNeg",""],["LLVMBuildNot",""],["LLVMBuildOr",""],["LLVMBuildPhi",""],["LLVMBuildPointerCast",""],["LLVMBuildPtrDiff",""],["LLVMBuildPtrToInt",""],["LLVMBuildResume",""],["LLVMBuildRet",""],["LLVMBuildRetVoid",""],["LLVMBuildSDiv",""],["LLVMBuildSExt",""],["LLVMBuildSExtOrBitCast",""],["LLVMBuildSIToFP",""],["LLVMBuildSRem",""],["LLVMBuildSelect",""],["LLVMBuildShl",""],["LLVMBuildShuffleVector",""],["LLVMBuildStore",""],["LLVMBuildStructGEP",""],["LLVMBuildSub",""],["LLVMBuildSwitch",""],["LLVMBuildTrunc",""],["LLVMBuildTruncOrBitCast",""],["LLVMBuildUDiv",""],["LLVMBuildUIToFP",""],["LLVMBuildURem",""],["LLVMBuildUnreachable",""],["LLVMBuildVAArg",""],["LLVMBuildXor",""],["LLVMBuildZExt",""],["LLVMBuildZExtOrBitCast",""],["LLVMCallFrameAlignmentOfType","Returns the minimum alignment of a type when part of a call frame."],["LLVMClearInsertionPosition",""],["LLVMCloneModule",""],["LLVMConstAShr",""],["LLVMConstAdd",""],["LLVMConstAllOnes",""],["LLVMConstAnd",""],["LLVMConstArray",""],["LLVMConstBitCast",""],["LLVMConstExactSDiv",""],["LLVMConstExtractElement",""],["LLVMConstExtractValue",""],["LLVMConstFAdd",""],["LLVMConstFCmp",""],["LLVMConstFDiv",""],["LLVMConstFMul",""],["LLVMConstFNeg",""],["LLVMConstFPCast",""],["LLVMConstFPExt",""],["LLVMConstFPToSI",""],["LLVMConstFPToUI",""],["LLVMConstFPTrunc",""],["LLVMConstFRem",""],["LLVMConstFSub",""],["LLVMConstGEP",""],["LLVMConstICmp",""],["LLVMConstInBoundsGEP",""],["LLVMConstInlineAsm",""],["LLVMConstInsertElement",""],["LLVMConstInsertValue",""],["LLVMConstInt",""],["LLVMConstIntCast",""],["LLVMConstIntGetSExtValue",""],["LLVMConstIntGetZExtValue",""],["LLVMConstIntOfString",""],["LLVMConstIntOfStringAndSize",""],["LLVMConstIntToPtr",""],["LLVMConstLShr",""],["LLVMConstMul",""],["LLVMConstNSWAdd",""],["LLVMConstNSWMul",""],["LLVMConstNSWNeg",""],["LLVMConstNSWSub",""],["LLVMConstNUWAdd",""],["LLVMConstNUWMul",""],["LLVMConstNUWNeg",""],["LLVMConstNUWSub",""],["LLVMConstNamedStruct",""],["LLVMConstNeg",""],["LLVMConstNot",""],["LLVMConstNull",""],["LLVMConstOr",""],["LLVMConstPointerCast",""],["LLVMConstPointerNull",""],["LLVMConstPtrToInt",""],["LLVMConstReal",""],["LLVMConstRealOfString",""],["LLVMConstRealOfStringAndSize",""],["LLVMConstSDiv",""],["LLVMConstSExt",""],["LLVMConstSExtOrBitCast",""],["LLVMConstSIToFP",""],["LLVMConstSRem",""],["LLVMConstSelect",""],["LLVMConstShl",""],["LLVMConstShuffleVector",""],["LLVMConstStringInContext",""],["LLVMConstStructInContext",""],["LLVMConstSub",""],["LLVMConstTrunc",""],["LLVMConstTruncOrBitCast",""],["LLVMConstUDiv",""],["LLVMConstUIToFP",""],["LLVMConstURem",""],["LLVMConstVector",""],["LLVMConstXor",""],["LLVMConstZExt",""],["LLVMConstZExtOrBitCast",""],["LLVMContextCreate",""],["LLVMContextDispose",""],["LLVMContextSetDiagnosticHandler",""],["LLVMCountBasicBlocks",""],["LLVMCountIncoming",""],["LLVMCountParamTypes",""],["LLVMCountParams",""],["LLVMCountStructElementTypes",""],["LLVMCreateBuilderInContext",""],["LLVMCreateFunctionPassManagerForModule","Creates a function-by-function pass manager"],["LLVMCreateMemoryBufferWithMemoryRange","Borrows the contents of the memory buffer (doesn't copy it)"],["LLVMCreateMemoryBufferWithMemoryRangeCopy",""],["LLVMCreateObjectFile","Opens an object file."],["LLVMCreatePassManager","Creates a pass manager."],["LLVMCreateTargetData","Creates target data from a target layout string."],["LLVMDeleteBasicBlock",""],["LLVMDeleteFunction",""],["LLVMDeleteGlobal",""],["LLVMDisposeBuilder",""],["LLVMDisposeMemoryBuffer","Destroys a memory buffer."],["LLVMDisposeModule",""],["LLVMDisposeObjectFile","Closes an object file."],["LLVMDisposePassManager","Disposes a pass manager."],["LLVMDisposeSectionIterator","Destroys a section iterator."],["LLVMDisposeTargetData","Disposes target data."],["LLVMDoubleTypeInContext",""],["LLVMDumpModule","See Module::dump."],["LLVMDumpValue",""],["LLVMFP128TypeInContext",""],["LLVMFinalizeFunctionPassManager","Finalizes all the function passes scheduled in the manager"],["LLVMFloatTypeInContext",""],["LLVMFunctionType",""],["LLVMGetAlignment",""],["LLVMGetArrayLength",""],["LLVMGetAttribute",""],["LLVMGetBasicBlockParent",""],["LLVMGetBasicBlocks",""],["LLVMGetCurrentDebugLocation",""],["LLVMGetDataLayout","Data layout. See Module::getDataLayout."],["LLVMGetDiagInfoSeverity",""],["LLVMGetElementType",""],["LLVMGetEntryBasicBlock",""],["LLVMGetFirstBasicBlock",""],["LLVMGetFirstFunction",""],["LLVMGetFirstGlobal",""],["LLVMGetFirstInstruction",""],["LLVMGetFirstParam",""],["LLVMGetFirstUse",""],["LLVMGetFunctionAttr",""],["LLVMGetFunctionCallConv",""],["LLVMGetGC",""],["LLVMGetGlobalParent",""],["LLVMGetIncomingBlock",""],["LLVMGetIncomingValue",""],["LLVMGetInitializer",""],["LLVMGetInsertBlock",""],["LLVMGetInstructionCallConv",""],["LLVMGetInstructionParent",""],["LLVMGetIntTypeWidth",""],["LLVMGetIntrinsicID",""],["LLVMGetLastBasicBlock",""],["LLVMGetLastFunction",""],["LLVMGetLastGlobal",""],["LLVMGetLastInstruction",""],["LLVMGetLastParam",""],["LLVMGetLinkage",""],["LLVMGetMDKindIDInContext",""],["LLVMGetModuleContext",""],["LLVMGetNamedFunction",""],["LLVMGetNamedGlobal",""],["LLVMGetNextBasicBlock",""],["LLVMGetNextFunction",""],["LLVMGetNextGlobal",""],["LLVMGetNextInstruction",""],["LLVMGetNextParam",""],["LLVMGetNextUse",""],["LLVMGetNumOperands",""],["LLVMGetOperand",""],["LLVMGetParam",""],["LLVMGetParamParent",""],["LLVMGetParamTypes",""],["LLVMGetParams",""],["LLVMGetPointerAddressSpace",""],["LLVMGetPointerToGlobal",""],["LLVMGetPreviousBasicBlock",""],["LLVMGetPreviousFunction",""],["LLVMGetPreviousGlobal",""],["LLVMGetPreviousInstruction",""],["LLVMGetPreviousParam",""],["LLVMGetReturnType",""],["LLVMGetSection",""],["LLVMGetSectionContents","Returns the current section contents as a string buffer."],["LLVMGetSectionSize","Returns the current section size."],["LLVMGetSections","Enumerates the sections in an object file."],["LLVMGetStructElementTypes",""],["LLVMGetTarget","Target triple. See Module::getTargetTriple."],["LLVMGetTypeContext","See llvm::LLVMType::getContext."],["LLVMGetUndef",""],["LLVMGetUsedValue",""],["LLVMGetUser",""],["LLVMGetValueName",""],["LLVMGetVectorSize",""],["LLVMGetVisibility",""],["LLVMGetVolatile",""],["LLVMInitializeFunctionPassManager","Initializes all the function passes scheduled in the manager"],["LLVMInitializePasses",""],["LLVMInsertBasicBlockInContext",""],["LLVMInsertIntoBuilder",""],["LLVMInsertIntoBuilderWithName",""],["LLVMInstructionEraseFromParent",""],["LLVMInt16TypeInContext",""],["LLVMInt1TypeInContext",""],["LLVMInt32TypeInContext",""],["LLVMInt64TypeInContext",""],["LLVMInt8TypeInContext",""],["LLVMIntTypeInContext",""],["LLVMIsAAllocaInst",""],["LLVMIsAArgument",""],["LLVMIsAConstantInt",""],["LLVMIsAGlobalVariable",""],["LLVMIsAStoreInst",""],["LLVMIsATerminatorInst",""],["LLVMIsConstant",""],["LLVMIsDeclaration",""],["LLVMIsFunctionVarArg",""],["LLVMIsGlobalConstant",""],["LLVMIsMultithreaded",""],["LLVMIsNull",""],["LLVMIsPackedStruct",""],["LLVMIsSectionIteratorAtEnd","Returns true if the section iterator is at the end of the section list:"],["LLVMIsTailCall",""],["LLVMIsThreadLocal",""],["LLVMIsUndef",""],["LLVMLabelTypeInContext",""],["LLVMMDNodeInContext",""],["LLVMMDStringInContext",""],["LLVMModuleCreateWithNameInContext",""],["LLVMMoveBasicBlockAfter",""],["LLVMMoveBasicBlockBefore",""],["LLVMMoveToNextSection","Moves the section iterator to point to the next section."],["LLVMOffsetOfElement","Computes the byte offset of the indexed struct element for a target."],["LLVMPPCFP128TypeInContext",""],["LLVMPassManagerBuilderCreate",""],["LLVMPassManagerBuilderDispose",""],["LLVMPassManagerBuilderPopulateFunctionPassManager",""],["LLVMPassManagerBuilderPopulateLTOPassManager",""],["LLVMPassManagerBuilderPopulateModulePassManager",""],["LLVMPassManagerBuilderSetDisableSimplifyLibCalls",""],["LLVMPassManagerBuilderSetDisableUnitAtATime",""],["LLVMPassManagerBuilderSetDisableUnrollLoops",""],["LLVMPassManagerBuilderSetOptLevel",""],["LLVMPassManagerBuilderSetSizeLevel",""],["LLVMPassManagerBuilderUseInlinerWithThreshold",""],["LLVMPointerType",""],["LLVMPositionBuilder",""],["LLVMPositionBuilderAtEnd",""],["LLVMPositionBuilderBefore",""],["LLVMPreferredAlignmentOfType","Returns the preferred alignment of a type."],["LLVMRemoveAttribute",""],["LLVMRemoveFunctionAttr",""],["LLVMRemoveInstrAttribute",""],["LLVMReplaceAllUsesWith",""],["LLVMRunFunctionPassManager","Runs the function passes on the provided function."],["LLVMRunPassManager","Runs a pass manager on a module."],["LLVMRustAddAlwaysInlinePass",""],["LLVMRustAddAnalysisPasses",""],["LLVMRustAddBuilderLibraryInfo",""],["LLVMRustAddCallSiteAttribute",""],["LLVMRustAddDereferenceableAttr",""],["LLVMRustAddDereferenceableCallSiteAttr",""],["LLVMRustAddFunctionAttrString",""],["LLVMRustAddFunctionAttrStringValue",""],["LLVMRustAddFunctionAttribute",""],["LLVMRustAddHandler",""],["LLVMRustAddLibraryInfo",""],["LLVMRustAddModuleFlag",""],["LLVMRustAddPass",""],["LLVMRustArchiveChildData",""],["LLVMRustArchiveChildFree",""],["LLVMRustArchiveChildName",""],["LLVMRustArchiveIteratorFree",""],["LLVMRustArchiveIteratorNew",""],["LLVMRustArchiveIteratorNext",""],["LLVMRustArchiveMemberFree",""],["LLVMRustArchiveMemberNew",""],["LLVMRustArrayType",""],["LLVMRustBuildAtomicCmpXchg",""],["LLVMRustBuildAtomicFence",""],["LLVMRustBuildAtomicLoad",""],["LLVMRustBuildAtomicStore",""],["LLVMRustBuildCall",""],["LLVMRustBuildCatchPad",""],["LLVMRustBuildCatchRet",""],["LLVMRustBuildCatchSwitch",""],["LLVMRustBuildCleanupPad",""],["LLVMRustBuildCleanupRet",""],["LLVMRustBuildInvoke",""],["LLVMRustBuildLandingPad",""],["LLVMRustBuildOperandBundleDef",""],["LLVMRustConfigurePassManagerBuilder",""],["LLVMRustCreateMemoryBufferWithContentsOfFile","Reads the given file and returns it as a memory buffer. Use LLVMDisposeMemoryBuffer() to get rid of it."],["LLVMRustCreateTargetMachine",""],["LLVMRustDIBuilderCreate",""],["LLVMRustDIBuilderCreateArrayType",""],["LLVMRustDIBuilderCreateBasicType",""],["LLVMRustDIBuilderCreateCompileUnit",""],["LLVMRustDIBuilderCreateDebugLocation",""],["LLVMRustDIBuilderCreateEnumerationType",""],["LLVMRustDIBuilderCreateEnumerator",""],["LLVMRustDIBuilderCreateFile",""],["LLVMRustDIBuilderCreateFunction",""],["LLVMRustDIBuilderCreateLexicalBlock",""],["LLVMRustDIBuilderCreateLexicalBlockFile",""],["LLVMRustDIBuilderCreateMemberType",""],["LLVMRustDIBuilderCreateNameSpace",""],["LLVMRustDIBuilderCreateOpDeref",""],["LLVMRustDIBuilderCreateOpPlus",""],["LLVMRustDIBuilderCreatePointerType",""],["LLVMRustDIBuilderCreateStaticVariable",""],["LLVMRustDIBuilderCreateStructType",""],["LLVMRustDIBuilderCreateSubroutineType",""],["LLVMRustDIBuilderCreateTemplateTypeParameter",""],["LLVMRustDIBuilderCreateUnionType",""],["LLVMRustDIBuilderCreateVariable",""],["LLVMRustDIBuilderCreateVectorType",""],["LLVMRustDIBuilderDispose",""],["LLVMRustDIBuilderFinalize",""],["LLVMRustDIBuilderGetOrCreateArray",""],["LLVMRustDIBuilderGetOrCreateSubrange",""],["LLVMRustDIBuilderInsertDeclareAtEnd",""],["LLVMRustDIBuilderInsertDeclareBefore",""],["LLVMRustDICompositeTypeSetTypeArray",""],["LLVMRustDebugMetadataVersion",""],["LLVMRustDestroyArchive",""],["LLVMRustDisposeTargetMachine",""],["LLVMRustFindAndCreatePass",""],["LLVMRustFreeOperandBundleDef",""],["LLVMRustGetDiagInfoKind",""],["LLVMRustGetLastError","Returns a string describing the last error caused by an LLVMRust* call."],["LLVMRustGetModuleDataLayout",""],["LLVMRustGetNamedValue",""],["LLVMRustGetOrInsertFunction",""],["LLVMRustGetOrInsertGlobal",""],["LLVMRustGetSectionName",""],["LLVMRustGetTypeKind","See llvm::LLVMTypeKind::getTypeID."],["LLVMRustHasFeature",""],["LLVMRustInlineAsm","Prepares inline assembly."],["LLVMRustLinkInExternalBitcode",""],["LLVMRustMarkAllFunctionsNounwind",""],["LLVMRustMetadataTypeInContext",""],["LLVMRustOpenArchive",""],["LLVMRustPassKind",""],["LLVMRustPositionBuilderAtStart",""],["LLVMRustPrintModule",""],["LLVMRustPrintPassTimings","Print the pass timings since static dtors aren't picking them up."],["LLVMRustPrintPasses",""],["LLVMRustPrintTargetCPUs",""],["LLVMRustPrintTargetFeatures",""],["LLVMRustRemoveFunctionAttrString",""],["LLVMRustRemoveFunctionAttributes",""],["LLVMRustRunFunctionPassManager",""],["LLVMRustRunRestrictionPass",""],["LLVMRustSetComdat",""],["LLVMRustSetDataLayoutFromTargetMachine",""],["LLVMRustSetDebug","Enables LLVM debug output."],["LLVMRustSetHasUnsafeAlgebra",""],["LLVMRustSetInlineAsmDiagnosticHandler",""],["LLVMRustSetLLVMOptions",""],["LLVMRustSetModulePIELevel",""],["LLVMRustSetNormalizedTarget",""],["LLVMRustSetPersonalityFn",""],["LLVMRustUnpackInlineAsmDiagnostic",""],["LLVMRustUnpackOptimizationDiagnostic",""],["LLVMRustUnsetComdat",""],["LLVMRustVersionMajor",""],["LLVMRustVersionMinor",""],["LLVMRustWriteArchive",""],["LLVMRustWriteDebugLocToString",""],["LLVMRustWriteDiagnosticInfoToString",""],["LLVMRustWriteOutputFile",""],["LLVMRustWriteSMDiagnosticToString",""],["LLVMRustWriteTwineToString",""],["LLVMRustWriteTypeToString",""],["LLVMRustWriteValueToString",""],["LLVMSetAlignment",""],["LLVMSetCleanup",""],["LLVMSetCurrentDebugLocation",""],["LLVMSetDLLStorageClass",""],["LLVMSetDataLayout",""],["LLVMSetFunctionCallConv",""],["LLVMSetGC",""],["LLVMSetGlobalConstant",""],["LLVMSetInitializer",""],["LLVMSetInstDebugLocation",""],["LLVMSetInstrParamAlignment",""],["LLVMSetInstructionCallConv",""],["LLVMSetLinkage",""],["LLVMSetMetadata",""],["LLVMSetModuleInlineAsm","See Module::setModuleInlineAsm."],["LLVMSetOperand",""],["LLVMSetParamAlignment",""],["LLVMSetSection",""],["LLVMSetTailCall",""],["LLVMSetTarget",""],["LLVMSetThreadLocal",""],["LLVMSetUnnamedAddr",""],["LLVMSetValueName",""],["LLVMSetVisibility",""],["LLVMSetVolatile",""],["LLVMSizeOf",""],["LLVMSizeOfTypeInBits","Number of bytes clobbered when doing a Store to *T."],["LLVMStartMultithreaded",""],["LLVMStoreSizeOfType","Number of bytes clobbered when doing a Store to *T."],["LLVMStructCreateNamed",""],["LLVMStructSetBody",""],["LLVMStructTypeInContext",""],["LLVMTypeOf",""],["LLVMValueAsBasicBlock",""],["LLVMValueIsBasicBlock",""],["LLVMVectorType",""],["LLVMVoidTypeInContext",""],["LLVMWriteBitcodeToFile","Writes a module to the specified path. Returns 0 on success."],["LLVMX86FP80TypeInContext",""]],"mod":[["debuginfo",""]],"struct":[["Attribute",""]],"type":[["ArchiveChildRef",""],["ArchiveIteratorRef",""],["ArchiveRef",""],["BasicBlockRef",""],["Bool",""],["BuilderRef",""],["ContextRef",""],["DebugLocRef",""],["DiagnosticHandler",""],["DiagnosticInfoRef",""],["ExecutionEngineRef",""],["InlineAsmDiagHandler",""],["MemoryBufferRef",""],["MetadataRef",""],["ModuleRef",""],["ObjectFileRef",""],["Opcode",""],["OperandBundleDefRef",""],["PassManagerBuilderRef",""],["PassManagerRef",""],["PassRef",""],["RustArchiveMemberRef",""],["SMDiagnosticRef",""],["SectionIteratorRef",""],["TargetDataRef",""],["TargetMachineRef",""],["TwineRef",""],["TypeRef",""],["UseRef",""],["ValueRef",""]]});