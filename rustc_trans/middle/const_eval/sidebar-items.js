initSidebarItems({"enum":[["ConstVal",""],["ErrKind",""],["EvalHint","Hint to determine how to evaluate constant expressions which might not be type-checked."],["IntTy",""],["UintTy",""]],"fn":[["compare_const_vals",""],["compare_lit_exprs",""],["const_expr_to_pat",""],["const_int_checked_add",""],["const_int_checked_div",""],["const_int_checked_mul",""],["const_int_checked_neg",""],["const_int_checked_rem",""],["const_int_checked_shl",""],["const_int_checked_shl_via_uint",""],["const_int_checked_shr",""],["const_int_checked_shr_via_uint",""],["const_int_checked_sub",""],["const_uint_checked_add",""],["const_uint_checked_div",""],["const_uint_checked_mul",""],["const_uint_checked_neg",""],["const_uint_checked_rem",""],["const_uint_checked_shl",""],["const_uint_checked_shl_via_int",""],["const_uint_checked_shr",""],["const_uint_checked_shr_via_int",""],["const_uint_checked_sub",""],["eval_const_expr",""],["eval_const_expr_partial","Evaluate a constant expression in a context where the expression isn't guaranteed to be evaluatable. `ty_hint` is usually ExprTypeChecked, but a few places need to evaluate constants during type-checking, like computing the length of an array. (See also the FIXME above EvalHint.)"],["lookup_const_by_id",""],["lookup_const_fn_by_id",""]],"struct":[["ConstEvalErr",""]],"type":[["CastResult",""],["EvalResult",""]]});