initSidebarItems({"enum":[["LabelText","The text for a graphviz label on a node or edge."],["RenderOption",""],["Style","The style for a node or edge. See http://www.graphviz.org/doc/info/attrs.html#k:style for descriptions. Note that some of these are not valid for edges."]],"fn":[["default_options","Returns vec holding all the default render options."],["escape_html","Escape tags in such a way that it is suitable for inclusion in a Graphviz HTML label."],["render","Renders directed graph `g` into the writer `w` in DOT syntax. (Simple wrapper around `render_opts` that passes a default set of options.)"],["render_opts","Renders directed graph `g` into the writer `w` in DOT syntax. (Main entry point for the library.)"]],"struct":[["Id","`Id` is a Graphviz `ID`."]],"trait":[["GraphWalk","GraphWalk is an abstraction over a directed graph = (nodes,edges) made up of node handles `N` and edge handles `E`, where each `E` can be mapped to its source and target nodes."],["IntoCow",""],["Labeller","Each instance of a type that implements `Label<C>` maps to a unique identifier with respect to `C`, which is used to identify it in the generated .dot file. They can also provide more elaborate (and non-unique) label text that is used in the graphviz rendered output. The graph instance is responsible for providing the DOT compatible identifiers for the nodes and (optionally) rendered labels for the nodes and edges, as well as an identifier for the graph itself."]],"type":[["Edges",""],["Nodes",""]]});