initSidebarItems({"fn":[["big_to_fp","Approximate a bignum with an Fp. Rounds within 0.5 ULP with half-to-even."],["encode_normal","Inverse of `RawFloat::unpack()` for normalized numbers. Panics if the significand or exponent are not valid for normalized numbers."],["encode_subnormal","Construct the subnormal. A mantissa of 0 is allowed and constructs zero."],["fp_to_float","Convert an Fp to the closest f64. Only handles number that fit into a normalized f64."],["next_float",""],["prev_float","Find the largest floating point number strictly smaller than the argument. Does not handle subnormals, zero, or exponent underflow."],["round_normal","Round the 64-bit significand to 53 bit with half-to-even. Does not handle exponent overflow."]],"struct":[["Unpacked",""]],"trait":[["RawFloat","A helper trait to avoid duplicating basically all the conversion code for `f32` and `f64`."]]});